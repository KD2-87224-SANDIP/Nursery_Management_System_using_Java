/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nms;

import static connection.connect_database.connection_string;
import static connection.connect_database.database_password;
import static connection.connect_database.database_username;
import static connection.connect_database.driver_name;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amprojects
 */
public class orders extends javax.swing.JFrame {

    /**
     * Creates new form orders
     */
    int oid=0;
    String pid="";
    String cid="";
    int odid=0;
    int toid=0;
    DefaultTableModel model;
    public orders() {
        initComponents();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        date_time.setText(dateFormat.format(date));
        model = new DefaultTableModel(new String[] {"Plant Name","Rate","Quantity","Total"},0);
        details.setModel(model);
        getid();
        getplants();
        getcustomer();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        customer_id = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        total_amt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        date_time = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rate = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        order_id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        plant_id = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        details = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customer_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_idActionPerformed(evt);
            }
        });

        jButton1.setText("search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        total_amt.setText("0.00");

        jLabel4.setText("Rate");

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        date_time.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        date_time.setText("00/00/0000");

        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel2.setText("Order ID");

        jButton3.setText("<<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton8.setText("Close");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantity");

        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityKeyReleased(evt);
            }
        });

        jLabel3.setText("Customer Name");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Order Info");

        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setText("Total Amount");

        jButton6.setText(">>");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel7.setText("Plant Name");

        plant_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plant_idActionPerformed(evt);
            }
        });

        jLabel8.setText("Status");

        status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Placed", "Shipped", "Completed", "Cancel" }));

        jLabel9.setText("Total");

        jButton9.setText("Add");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Delete");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        details.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plant Name", "Rate", "Quantity", "Total"
            }
        ));
        jScrollPane1.setViewportView(details);

        jButton11.setText("Update");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(date_time, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(order_id, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(total_amt, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8))
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel5)
                                    .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(plant_id, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton10))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(total, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(quantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(date_time))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(order_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plant_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total_amt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton11))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void getid()
{
    try
    {
       oid=0;
       Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("select * from orders");
       ResultSet rs=pst.executeQuery();
       while(rs.next())
       {
           oid=rs.getInt(1);
       }
       oid=oid+1;
       order_id.setText(String.valueOf(oid));
    }
    catch(Exception ex)
    {
        jOptionPane1.showMessageDialog(null,ex);
    }
    
}
public void getodid()
{
    try
    {
       odid=0;
       Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("select * from order_details");
       ResultSet rs=pst.executeQuery();
       while(rs.next())
       {
           odid=rs.getInt(1);
       }
       odid=odid+1;
      
    }
    catch(Exception ex)
    {
        jOptionPane1.showMessageDialog(null,ex);
    }
    
}
public void getplants()
{
    try
    {
       Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("select * from plants");
       ResultSet rs=pst.executeQuery();
       while(rs.next())
       {
           plant_id.addItem(rs.getInt(1)+" "+rs.getString(2));
       }
    }
    catch(Exception ex)
    {
         jOptionPane1.showMessageDialog(null,ex);
    }
}
public void getcustomer()
{
    try
    {
       Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("select * from customer");
       ResultSet rs=pst.executeQuery();
       while(rs.next())
       {
           customer_id.addItem(rs.getInt(1)+" "+rs.getString(2));
       }
    }
    catch(Exception ex)
    {
         jOptionPane1.showMessageDialog(null,ex);
    }
}
public void clear_data()
{
    getid();
    int row=details.getRowCount();
    for(int j=0;j<row;j++)
    {
    model.removeRow(0);
    }
    total_amt.setText("0.00");
    total.setText("0.00");
    quantity.setText("");
    
    getplants();
    getplants();
    status.addItem("Place");
    status.addItem("Shipped");
    status.addItem("Cancel");
    status.addItem("Completed");
    
}
    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void plant_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plant_idActionPerformed
        // TODO add your handling code here:
        try
        {
            String pname=String.valueOf(plant_id.getSelectedItem());
            int l=pname.length();
            System.out.println(l);
            pid="";
            for(int i=0;i<l;i++)
            {
                char ch=pname.charAt(i);
                if(ch==' ')
                {
                   break; 
                }
                else
                {
                   pid=pid+ch; 
                }
            }
            
            System.out.println(pid);
       Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("select * from plants where plant_id="+pid+"");
       ResultSet rs=pst.executeQuery();
       if(rs.next())
       {
          rate.setText(rs.getString(3));
       }
       else
       {
          //jOptionPane1.showMessageDialog(null,"Unable to get Plant Price"); 
       }
            
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_plant_idActionPerformed

    private void quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyReleased
        // TODO add your handling code here:
        double r=Double.parseDouble(rate.getText());
        double q=Double.parseDouble(quantity.getText());
        double total1=r*q;
        total.setText(String.valueOf(total1));
    }//GEN-LAST:event_quantityKeyReleased

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        System.out.println(details.getColumnCount());
        System.out.println(details.getRowCount());
        
        try
        {
        if(total.getText().equals(""))
        {
            jOptionPane1.showMessageDialog(null,"Please select Plants Quantity");
        }
        else
        {
            
             model.addRow(new Object[]{plant_id.getSelectedItem(),rate.getText(),quantity.getText(),total.getText() }); 
             double amt=Double.valueOf(String.valueOf(total_amt.getText()));
             double total1=Double.valueOf(String.valueOf(total.getText()));
             double t=amt+total1;
             total_amt.setText(String.valueOf(t));
        }
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
         System.out.println(details.getRowCount());
         double amt=Double.valueOf(String.valueOf(total_amt.getText()));
         double total1=Double.valueOf(String.valueOf(details.getValueAt(details.getRowCount()-1,3)));
         double t=amt-total1;
         total_amt.setText(String.valueOf(t));
         model.removeRow(details.getRowCount()-1);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("update orders set status='"+status.getSelectedItem()+"' where order_id="+order_id.getText()+"");
       int i=pst.executeUpdate();
       if(i>0)
       {
          jOptionPane1.showMessageDialog(null,"Order Update Successfully");   
       }
       else
       {
           jOptionPane1.showMessageDialog(null,"Order Update failed");
       }
        }
        catch(Exception ex)
        {
           jOptionPane1.showMessageDialog(null,ex); 
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            
            
            System.out.println(details.getRowCount());
            if(details.getRowCount()>0)
            {
            Class.forName(driver_name);
            Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
            PreparedStatement pst=con.prepareStatement("insert into orders values("+odid+","+oid+",'"+date_time.getText()+"','"+total_amt.getText()+"','"+status.getSelectedItem()+"')");
            int i=pst.executeUpdate();
            jOptionPane1.showMessageDialog(null,"Order Place Successfully");
           
           
            
                
            }
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void customer_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_idActionPerformed
        // TODO add your handling code here:
        try
        {
            String pname=String.valueOf(customer_id.getSelectedItem());
            int l=pname.length();
            System.out.println(l);
            cid="";
            for(int i=0;i<l;i++)
            {
                char ch=pname.charAt(i);
                if(ch==' ')
                {
                   break; 
                }
                else
                {
                   cid=cid+ch; 
                }
            }  
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_customer_idActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        clear_data();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
          Class.forName(driver_name);
            Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
            PreparedStatement pst=con.prepareStatement("select * from orders where order_id="+search.getText()+" ");
            System.out.println("ok");
            ResultSet rs2=pst.executeQuery();
            System.out.println("ok");
            if(rs2.next())
            {
                order_id.setText(String.valueOf(rs2.getInt(1)));
                System.out.println("ok1");
                date_time.setText(rs2.getString(3));
                System.out.println("ok2");
                customer_id.removeAllItems();
                System.out.println("ok3");
                customer_id.addItem(rs2.getString(2));
                total_amt.setText(rs2.getString(4));
                status.removeAllItems();
                status.addItem(rs2.getString(5));
                
               status.addItem("Place");
    status.addItem("Shipped");
    status.addItem("Cancel");
    status.addItem("Completed");
                
                int row=details.getRowCount();
    for(int j=0;j<row;j++)
    {
    model.removeRow(0);
    }
    
    PreparedStatement pst1=con.prepareStatement("select * from order_details where order_id="+search.getText()+"");
    ResultSet rs1=pst1.executeQuery();
    while(rs1.next())
    {
        model.addRow(new Object[]{rs1.getString(3),rs1.getString(4),rs1.getString(5),rs1.getString(6) }); 
    }
            }
            else
            {
                jOptionPane1.showMessageDialog(null,"Record Not found");
            }
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try
        {
       Class.forName(driver_name);
       Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
       PreparedStatement pst=con.prepareStatement("delete from orders where order_id="+order_id.getText()+"");
       int i=pst.executeUpdate();
       if(i>0)
       {
          jOptionPane1.showMessageDialog(null,"Order Delete Successfully"); 
          clear_data();
       }
       else
       {
           jOptionPane1.showMessageDialog(null,"Order Delete failed");
       }
        }
        catch(Exception ex)
        {
          jOptionPane1.showMessageDialog(null,ex);  
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        toid=toid+1;
        try
        {
          Class.forName(driver_name);
            Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
            PreparedStatement pst=con.prepareStatement("select * from orders where order_id="+toid+" ");
            System.out.println("ok");
            ResultSet rs2=pst.executeQuery();
            System.out.println("ok");
            if(rs2.next())
            {
                order_id.setText(String.valueOf(rs2.getInt(1)));
                System.out.println("ok1");
                date_time.setText(rs2.getString(3));
                System.out.println("ok2");
                customer_id.removeAllItems();
                System.out.println("ok3");
                customer_id.addItem(rs2.getString(2));
                total_amt.setText(rs2.getString(4));
                status.removeAllItems();
                status.addItem(rs2.getString(5));
                
               status.addItem("Place");
    status.addItem("Shipped");
    status.addItem("Cancel");
    status.addItem("Completed");
                
                int row=details.getRowCount();
    for(int j=0;j<row;j++)
    {
    model.removeRow(0);
    }
    
    PreparedStatement pst1=con.prepareStatement("select * from order_details where order_id="+toid+"");
    ResultSet rs1=pst1.executeQuery();
    while(rs1.next())
    {
        model.addRow(new Object[]{rs1.getString(3),rs1.getString(4),rs1.getString(5),rs1.getString(6) }); 
    }
            }
            else
            {
                jOptionPane1.showMessageDialog(null,"No Next Record found");
                toid=toid-1;
            }
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        toid=toid-1;
        try
        {
          Class.forName(driver_name);
            Connection con=DriverManager.getConnection(connection_string,database_username,database_password);
            PreparedStatement pst=con.prepareStatement("select * from orders where order_id="+toid+" ");
            System.out.println("ok");
            ResultSet rs2=pst.executeQuery();
            System.out.println("ok");
            if(rs2.next())
            {
                order_id.setText(String.valueOf(rs2.getInt(1)));
                System.out.println("ok1");
                date_time.setText(rs2.getString(3));
                System.out.println("ok2");
                customer_id.removeAllItems();
                System.out.println("ok3");
                customer_id.addItem(rs2.getString(2));
                total_amt.setText(rs2.getString(4));
                status.removeAllItems();
                status.addItem(rs2.getString(5));
                
               status.addItem("Place");
    status.addItem("Shipped");
    status.addItem("Cancel");
    status.addItem("Completed");
                
                int row=details.getRowCount();
    for(int j=0;j<row;j++)
    {
    model.removeRow(0);
    }
    
    PreparedStatement pst1=con.prepareStatement("select * from order_details where order_id="+toid+"");
    ResultSet rs1=pst1.executeQuery();
    while(rs1.next())
    {
        model.addRow(new Object[]{rs1.getString(3),rs1.getString(4),rs1.getString(5),rs1.getString(6) }); 
    }
            }
            else
            {
                jOptionPane1.showMessageDialog(null,"No Previous Record found");
                toid=toid+1;
            }
        }
        catch(Exception ex)
        {
            jOptionPane1.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new orders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox customer_id;
    private javax.swing.JLabel date_time;
    private javax.swing.JTable details;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField order_id;
    private javax.swing.JComboBox plant_id;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField rate;
    private javax.swing.JTextField search;
    private javax.swing.JComboBox status;
    private javax.swing.JTextField total;
    private javax.swing.JTextField total_amt;
    // End of variables declaration//GEN-END:variables
}
